


  describe "GET edit" do
    it "assigns the requested payment as @payment" do
      payment = Payment.create! valid_attributes
      get :edit, {:id => payment.to_param}, valid_session
      expect(assigns(:payment)).to eq(payment)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "creates a new Payment" do
        expect {
          post :create, {:payment => valid_attributes}, valid_session
        }.to change(Payment, :count).by(1)
      end

      it "assigns a newly created payment as @payment" do
        post :create, {:payment => valid_attributes}, valid_session
        expect(assigns(:payment)).to be_a(Payment)
        expect(assigns(:payment)).to be_persisted
      end

      it "redirects to the created payment" do
        post :create, {:payment => valid_attributes}, valid_session
        expect(response).to redirect_to(Payment.last)
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved payment as @payment" do
        post :create, {:payment => invalid_attributes}, valid_session
        expect(assigns(:payment)).to be_a_new(Payment)
      end

      it "re-renders the 'new' template" do
        post :create, {:payment => invalid_attributes}, valid_session
        expect(response).to render_template("new")
      end
    end
  end

  describe "PUT update" do
    describe "with valid params" do
      let(:new_attributes) {
        skip("Add a hash of attributes valid for your model")
      }

      it "updates the requested payment" do
        payment = Payment.create! valid_attributes
        put :update, {:id => payment.to_param, :payment => new_attributes}, valid_session
        payment.reload
        skip("Add assertions for updated state")
      end

      it "assigns the requested payment as @payment" do
        payment = Payment.create! valid_attributes
        put :update, {:id => payment.to_param, :payment => valid_attributes}, valid_session
        expect(assigns(:payment)).to eq(payment)
      end

      it "redirects to the payment" do
        payment = Payment.create! valid_attributes
        put :update, {:id => payment.to_param, :payment => valid_attributes}, valid_session
        expect(response).to redirect_to(payment)
      end
    end

    describe "with invalid params" do
      it "assigns the payment as @payment" do
        payment = Payment.create! valid_attributes
        put :update, {:id => payment.to_param, :payment => invalid_attributes}, valid_session
        expect(assigns(:payment)).to eq(payment)
      end

      it "re-renders the 'edit' template" do
        payment = Payment.create! valid_attributes
        put :update, {:id => payment.to_param, :payment => invalid_attributes}, valid_session
        expect(response).to render_template("edit")
      end
    end
  end

  describe "DELETE destroy" do
    it "destroys the requested payment" do
      payment = Payment.create! valid_attributes
      expect {
        delete :destroy, {:id => payment.to_param}, valid_session
      }.to change(Payment, :count).by(-1)
    end

    it "redirects to the payments list" do
      payment = Payment.create! valid_attributes
      delete :destroy, {:id => payment.to_param}, valid_session
      expect(response).to redirect_to(payments_url)
    end
  end